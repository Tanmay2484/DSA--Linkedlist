/* 142. Linked List Cycle II
   Link: https://leetcode.com/problems/linked-list-cycle-ii/description/
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
ListNode *detectCycle(ListNode *head) {
        auto slow=head,fast=head;
        while(fast and fast->next){
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast) break;
        }
        
        if(!fast or !fast->next) return NULL;
        slow=head;
        while(slow!=fast) slow=slow->next , fast=fast->next;
        return slow;
        
    }
};
